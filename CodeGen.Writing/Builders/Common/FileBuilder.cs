using System.Runtime.InteropServices;
using CodeGen.Contracts.Buffers;

namespace CodeGen.Writing.Builders.Common;

[StructLayout(LayoutKind.Sequential)]
public readonly ref struct FileBuilder
{
   private readonly ByReferenceStack _builder;
   internal ref CodeBuilder Builder => ref _builder.AsRef<CodeBuilder>();
   
   public FileBuilder(ref CodeBuilder builder)
   {
      _builder = ByReferenceStack.Create<CodeBuilder>(ref builder);
   }
}

public static class FileBuilderExtensions
{
   extension(ref FileBuilder builder)
   {
      public ref FileBuilder WriteAutoGenerated()
      {
         ref var writer = ref builder.Builder.Writer;
         writer.WriteLine("// <auto-generated>");
         writer.WriteLine("// This code was generated. Changes to this file will be lost if the code is regenerated.");
         writer.WriteLine("// </auto-generated>");
         
         return ref builder;
      }
      
      public ref FileBuilder WriteStartAutoGenerated()
      {
         ref var writer = ref builder.Builder.Writer;
         writer.WriteLine("// <auto-generated>");
         
         return ref builder;
      }
      
      public ref FileBuilder WriteEndAutoGenerated()
      {
         ref var writer = ref builder.Builder.Writer;
         writer.WriteLine("// </auto-generated>");
         
         return ref builder;
      }
      
      
   }
}