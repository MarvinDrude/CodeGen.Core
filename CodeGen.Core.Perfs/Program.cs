
using BenchmarkDotNet.Running;
using CodeGen.Common.Buffers;
using CodeGen.Common.CodeGen;
using CodeGen.Common.CodeGen.Immediate;
using CodeGen.Core.Perfs.CodeGen;

// for (var e = 0; e < 10_000; e++)
// {
//    new OldWriterCompareBenchmark().NewWriterStatefulNoArrayPoolNeededNoStringResult();
// }

#if RELEASE
BenchmarkRunner.Run<OldWriterCompareBenchmark>();
#else

new OldWriterCompareBenchmark().OldWriterNoToStringResult();

// var test = new NoAllocationCodeWriterBenchmark();
// test.N = 100;
// test.Run();
//
// Console.WriteLine("Start");
// Test();
//
// void Test()
// {
//    try
//    {
//       var builder = new CodeBuilder(
//          stackalloc char[812],
//          stackalloc char[128],
//          3, ' ');
//       
//       builder.NameSpaceIm
//          .EnableNullable()
//          .AutoGeneratedComment()
//          .WriteLine()
//             .Using("System.Test")
//             .Using("System.A")
//             .Using("System.B")
//             .WriteLine()
//          .Set("My.NameSpace")
//          .WriteLine();
//
//       builder.ClassIm
//          .OpenHeader("public static class Test<T, E>")
//             .FirstBaseDeclaration("BaseClassOne")
//             .NextBaseDeclaration("IInterfaceTwo")
//             .CloseBaseDeclaration()
//             .FirstGenericConstraint("where T : notnull")
//             .NextGenericConstraint("where E : struct, new()")
//             .CloseGenericConstraint()
//          .CloseHeader()
//          .Done()
//          .MethodIm.OpenHeader("public", "void", "TestMethod", false)
//          .CloseHeaderNoParameters()
//          .OpenBody()
//             .WriteLine("Console.WriteLine();")
//          .CloseBody()
//          .CloseBody();
//
//       builder.Writer.WriteLine();
//       builder.Writer.WriteLine();
//       
//       builder.ClassIm
//          .OpenHeader("public static class Test<T, E>")
//             .FirstGenericConstraint("where T : notnull")
//             .NextGenericConstraint("where E : struct, new()")
//             .CloseGenericConstraint()
//          .CloseHeader()
//          .Done()
//          .MethodIm.OpenHeader("public", "void", "TestMethod")
//             .FirstParameter("string", "name")
//          .CloseHeader()
//          .OpenBody()
//             .WriteLine("Console.WriteLine(name);")
//          .CloseBody()
//          .CloseBody();
//       
//       var str = builder.ToString();
//       
//       builder.Dispose();
//    }
//    catch (Exception error)
//    {
//       Console.WriteLine(error);
//    }
// }

#endif
