
using CodeGen.Contracts.Enums;
using CodeGen.Writing.Builders;
using CodeGen.Writing.Builders.Common;
using CodeGen.Writing.Builders.Interfaces;

// Console.WriteLine("Hello, World!");
//
// var writer = new CodeTextWriter(
//    stackalloc char[256], stackalloc char[128]);
//   
// var x = 20;
//
// writer.UpIndent();
// writer.UpIndent();
// writer.OpenBody();
// writer.WriteInterpolated($"{x} - {x}");
// writer.WriteLine();
// writer.CloseBodySemicolon();
//
// Console.WriteLine(writer.ToString());

try
{
   var builder = new CodeBuilder(
      stackalloc char[256], stackalloc char[128]);

   const int x = 20;
   
   builder.File
      .WriteStartAutoGenerated()
         .WriteLine("// Here")
         .WriteLine("// is a message")
         .WriteLineInterpolated($"// Test {x}")
      .WriteEndAutoGenerated()
      .WriteNullableEnable()
         .WriteUsing("NameSpaceA")
         .WriteUsing("NameSpaceB.Test", true);

   builder.ClassHeader
      .WriteAccess(AccessModifier.Public)
      .WriteLine()
      .WriteAccessPublic()
      .WriteLine()
      .WriteAccessProtectedInternal();

   Console.WriteLine(builder.Writer.ToString());
}
catch (Exception e)
{
   Console.WriteLine(e);
   throw;
}

